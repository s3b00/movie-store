{"version":3,"sources":["types/movie.ts","components/About_me.tsx","hooks/useTypedSelector.ts","components/EmptyList.tsx","components/Header.tsx","components/MovieCard.tsx","components/MovieList.tsx","components/MoviePage.tsx","types/movies.ts","components/Toolbar.tsx","App.tsx","constants.tsx","store/action-creators/movie.ts","store/action-creators/movies.ts","store/reducers/movieReducer.ts","store/reducers/moviesReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["MovieActionTypes","AboutMe","useTypedSelector","useSelector","EmptyList","error","store","movie","className","Header","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","MovieCard","card","style","width","imdbID","src","Poster","alt","Title","Type","Year","MovieList","movies","loading","map","el","MoviesActionTypes","MoviePage","match","dispatch","useDispatch","useEffect","FETCH_MOVIE_REQUESTED","payload","params","Country","imdbRating","Genre","Actors","BoxOffice","DVD","Director","Writer","Language","Metascore","Plot","Production","Website","Runtime","Toolbar","MovieFields","useState","title","setTitle","year","setYear","plot","setPlot","sort","SET_MOVIES","a","b","htmlFor","placeholder","onChange","target","value","onClick","MOVIES_FETCH_REQUESTED","name","App","exact","path","component","length","URL","fetchMovie","watchFetchMovie","action","put","FETCH_MOVIE","call","axios","method","url","response","data","FETCH_MOVIE_SUCCESS","message","FETCH_MOVIE_ERROR","takeEvery","fetchMovies","watchFetchMovies","FETCH_MOVIES","Response","Error","Search","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_ERROR","initialState","rootReducer","combineReducers","state","saga","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fdf5d8c.chunk.js","sourcesContent":["export interface movieStateType {\r\n    movie: null | IMovie;\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum MovieActionTypes {\r\n    FETCH_MOVIE = 'FETCH_MOVIE',\r\n    FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS',\r\n    FETCH_MOVIE_ERROR = 'FETCH_MOVIE_ERROR',\r\n    SET_MOVIE = 'SET_MOVIE',\r\n    FETCH_MOVIE_REQUESTED = 'FETCH_MOVIE_REQUESTED'\r\n}\r\n\r\nexport type FetchMovieAction = {\r\n    type: MovieActionTypes.FETCH_MOVIE;\r\n}\r\n\r\nexport type FetchMovieActionSuccess = {\r\n    type: MovieActionTypes.FETCH_MOVIE_SUCCESS,\r\n    payload: IMovie\r\n}\r\n\r\nexport type FetchMovieActionError = {\r\n    type: MovieActionTypes.FETCH_MOVIE_ERROR,\r\n    payload: string\r\n}\r\n\r\nexport type FetchMovieRequestedAction= {\r\n    type: MovieActionTypes.FETCH_MOVIE_REQUESTED,\r\n    payload: string\r\n}\r\n\r\nexport type MovieAction = FetchMovieAction\r\n| FetchMovieActionError | FetchMovieActionSuccess\r\n\r\nexport type IMovie = {\r\n    'Title': string;\r\n    'Year': string | number;\r\n    'Rated': string;\r\n    'Released': string;\r\n    'Runtime': string;\r\n    'Genre': string;\r\n    'Director': string;\r\n    'Writer': string;\r\n    'Actors': string;\r\n    'Plot': string;\r\n    'Language': string;\r\n    'Country': string;\r\n    'Awards': string;\r\n    'Poster': string;\r\n    'Ratings': IMovieRating[];\r\n    'Metascore': string;\r\n    'imdbRating': string;\r\n    'imdbVotes': string;\r\n    'imdbID': string;\r\n    'Type': string;\r\n    'DVD': string;\r\n    'BoxOffice': string;\r\n    'Production': string;\r\n    'Website': string;\r\n    'Response': string | boolean;\r\n};\r\n\r\nexport type IMovieRating = {\r\n    'Source': string;\r\n    'Value': string;\r\n}\r\n","import React from 'react';\r\n\r\nconst AboutMe: React.FC = () => (\r\n  <h1>Илюша, 48 лет.</h1>\r\n);\r\n\r\nexport default AboutMe;\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n\r\nconst EmptyList: React.FC = () => {\r\n  const { error } = useTypedSelector((store) => store.movie);\r\n\r\n  return (\r\n    <div className=\"h-100 d-flex align-items-center flex-column\">\r\n      {error ? <p>{error}</p> : <span />}\r\n      <h1>Тут пока ничего нет :с</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header: React.FC = () => (\r\n  <div className=\"container\">\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-2\">\r\n      <Link to=\"/\">\r\n        <a className=\"navbar-brand\" href=\"/#\">\r\n          MovieStore\r\n        </a>\r\n      </Link>\r\n\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/\">\r\n              <a className=\"nav-link\" href=\"/#\">\r\n                Главная страница\r\n              </a>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about_me\">\r\n              <a className=\"nav-link\" href=\"/#\">О команде</a>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IMovieCard } from '../types/movies';\r\n\r\ninterface MovieCardPropsType {\r\n    card: IMovieCard\r\n}\r\n\r\nexport const MovieCard: React.FC<MovieCardPropsType> = ({ card }) => (\r\n  <div className=\"card mb-2\" style={{ width: '220px' }} key={card.imdbID}>\r\n    <div className=\"card-header\">\r\n      <Link to={`/movie/${card.imdbID}`}>\r\n        <img src={card.Poster} className=\"img-fluid p-1\" alt=\".\" />\r\n      </Link>\r\n    </div>\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{card.Title}</h5>\r\n      <div className=\"card-text d-flex flex-column justify-content-between\">\r\n        <small>\r\n          Тип фильма:\r\n          {' '}\r\n          {card.Type}\r\n        </small>\r\n        {' '}\r\n        <br />\r\n        <small>\r\n          Год выхода:\r\n          {' '}\r\n          {card.Year}\r\n        </small>\r\n        {' '}\r\n        <br />\r\n        <small>\r\n          imdbID:\r\n          {' '}\r\n          {card.imdbID}\r\n        </small>\r\n        {' '}\r\n        <br />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { IMovieCard } from '../types/movies';\r\nimport { MovieCard } from './MovieCard';\r\n\r\nconst MovieList: React.FC = () => {\r\n  const { movies, error, loading } = useTypedSelector((store) => store.movies);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>Загружается..</div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between flex-wrap m-auto\">\r\n      {movies.map((el: IMovieCard) => (\r\n        <MovieCard card={el} key={el.imdbID} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { MovieActionTypes } from '../types/movie';\r\n\r\nexport const MoviePage: React.FC<any> = ({ match }) => {\r\n  const { movie, error, loading } = useTypedSelector((store) => store.movie);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: MovieActionTypes.FETCH_MOVIE_REQUESTED,\r\n      payload: `i=${match.params.imdbID}`,\r\n    });\r\n  }, [dispatch, match.params.imdbID]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        Ошибка в запросе. Ошибка:\r\n        {' '}\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        Загружаем данные!\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-3\">\r\n        <img src={movie?.Poster} alt={movie?.Title} />\r\n      </div>\r\n      <div className=\"col-9\">\r\n        <h1>{ movie?.Title }</h1>\r\n        <small>\r\n          Страна:\r\n          {' '}\r\n          { movie?.Country }\r\n        </small>\r\n        {' '}\r\n        <br />\r\n        <small>\r\n          imdbRating:\r\n          {' '}\r\n          { movie?.imdbRating }\r\n        </small>\r\n\r\n        <div>\r\n          <p>\r\n            Жанр:\r\n            {' '}\r\n            { movie?.Genre }\r\n          </p>\r\n          <p>\r\n            Актеры:\r\n            {' '}\r\n            { movie?.Actors }\r\n          </p>\r\n          <p>\r\n            Сборы:\r\n            {' '}\r\n            { movie?.BoxOffice }\r\n          </p>\r\n          <p>\r\n            Выход на DVD:\r\n            {' '}\r\n            { movie?.DVD }\r\n          </p>\r\n          <p>\r\n            Режисер:\r\n            {' '}\r\n            { movie?.Director }\r\n          </p>\r\n          <p>\r\n            Сценарист:\r\n            {' '}\r\n            { movie?.Writer }\r\n          </p>\r\n          <p>\r\n            Язык:\r\n            {' '}\r\n            { movie?.Language }\r\n          </p>\r\n          <p>\r\n            Метаскор:\r\n            {' '}\r\n            { movie?.Metascore }\r\n          </p>\r\n          <p>\r\n            Описание:\r\n            {' '}\r\n            { movie?.Plot }\r\n          </p>\r\n          <p>\r\n            Производитель:\r\n            {' '}\r\n            { movie?.Production }\r\n          </p>\r\n          <p>\r\n            Website:\r\n            {' '}\r\n            { movie?.Website }\r\n          </p>\r\n          <p>\r\n            Тип:\r\n            {' '}\r\n            { movie?.Type }\r\n          </p>\r\n          <p>\r\n            Время просмотра:\r\n            {' '}\r\n            { movie?.Runtime }\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export interface MoviesState {\r\n    movies: IMovieCard[] | [];\r\n    loading: boolean;\r\n    error: null | string;\r\n}\r\n\r\nexport enum MoviesActionTypes {\r\n    FETCH_MOVIES = 'FETCH_MOVIES',\r\n    FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS',\r\n    FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR',\r\n    SET_MOVIES = 'SET_MOVIES',\r\n    MOVIES_FETCH_REQUESTED = 'MOVIES_FETCH_REQUESTED'\r\n}\r\n\r\nexport interface FetchMoviesAction {\r\n    type: MoviesActionTypes.FETCH_MOVIES;\r\n}\r\n\r\nexport interface FetchMoviesSuccessAction {\r\n    type: MoviesActionTypes.FETCH_MOVIES_SUCCESS;\r\n    payload: IMovieCard[];\r\n}\r\n\r\nexport interface SetMoviesAction {\r\n    type: MoviesActionTypes.SET_MOVIES;\r\n    payload: IMovieCard[];\r\n}\r\n\r\nexport interface FetchMoviesErrorAction {\r\n    type: MoviesActionTypes.FETCH_MOVIES_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport interface MoviesFetchRequestAction {\r\n    type: MoviesActionTypes.MOVIES_FETCH_REQUESTED;\r\n    payload: string;\r\n}\r\n\r\nexport type MoviesAction = FetchMoviesAction | SetMoviesAction\r\n| FetchMoviesErrorAction | FetchMoviesSuccessAction\r\n\r\nexport type IMovieCard = {\r\n    Poster: string;\r\n    Title: string;\r\n    Type: string;\r\n    Year: string;\r\n    imdbID: string;\r\n}\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { IMovieCard, MoviesActionTypes } from '../types/movies';\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const [year, setYear] = useState<string>('');\r\n  const [plot, setPlot] = useState<string>('Short');\r\n\r\n  const { movies } = useTypedSelector((store) => store.movies);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const titleChange = ({ target }:\r\n    React.ChangeEvent<HTMLInputElement>):void => {\r\n    setTitle(target.value);\r\n  };\r\n\r\n  const yearChange = ({ target }:\r\n    React.ChangeEvent<HTMLInputElement>):void => {\r\n    setYear(target.value);\r\n  };\r\n\r\n  const plotChange = ({ target }:\r\n    React.ChangeEvent<HTMLSelectElement>):void => {\r\n    setPlot(target.value);\r\n  };\r\n\r\n  const searchClick = ():void => {\r\n    dispatch({\r\n      type: MoviesActionTypes.MOVIES_FETCH_REQUESTED,\r\n      payload: `s=${title}&y=${year}&plot=${plot}`,\r\n    });\r\n  };\r\n\r\n  enum MovieFields {\r\n    Year = 'Year',\r\n    Title = 'Title',\r\n    Type = 'Type'\r\n  }\r\n  const sort = (type: MovieFields): void => {\r\n    dispatch({\r\n      type: MoviesActionTypes.SET_MOVIES,\r\n      payload: movies.sort((a: IMovieCard, b: IMovieCard) => {\r\n        if (a[type] > b[type]) return 1;\r\n        if (a[type] < b[type]) return -1;\r\n\r\n        return 0;\r\n      }),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"row mb-3\">\r\n        <div className=\"col-12 col-md-4\">\r\n          <label\r\n            className=\"visually-hidden\"\r\n            htmlFor=\"titleInput\"\r\n          >\r\n            Title\r\n          </label>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"titleInput\"\r\n              placeholder=\"Title\"\r\n              onChange={titleChange}\r\n              value={title}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-3\">\r\n          <label\r\n            className=\"visually-hidden\"\r\n            htmlFor=\"yearInput\"\r\n          >\r\n            Year\r\n          </label>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"yearInput\"\r\n              placeholder=\"Year\"\r\n              onChange={yearChange}\r\n              value={year}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-3\">\r\n          <label\r\n            className=\"visually-hidden\"\r\n            htmlFor=\"plotInput\"\r\n          >\r\n            Plot\r\n          </label>\r\n          <select\r\n            className=\"form-select\"\r\n            id=\"plotInput\"\r\n            onChange={plotChange}\r\n          >\r\n            <option value=\"short\">Short</option>\r\n            <option value=\"full\">Full</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-12 col-md-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary col-12\"\r\n            onClick={searchClick}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"d-flex justify-content-around mt-2\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"title\"\r\n            className=\"form-check-input\"\r\n            id=\"titleRB\"\r\n            onChange={() => sort(MovieFields.Title)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"nameRB\">\r\n            Название\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check \">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"year\"\r\n            className=\"form-check-input\"\r\n            id=\"yearRB\"\r\n            onChange={() => sort(MovieFields.Year)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"abvRB\">\r\n            Год выхода\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"type\"\r\n            className=\"form-check-input\"\r\n            id=\"typeRB\"\r\n            onChange={() => sort(MovieFields.Year)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"attRB\">\r\n            Тип\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AboutMe from './components/About_me';\nimport EmptyList from './components/EmptyList';\nimport Header from './components/Header';\nimport MovieList from './components/MovieList';\nimport { MoviePage } from './components/MoviePage';\nimport Toolbar from './components/Toolbar';\nimport { useTypedSelector } from './hooks/useTypedSelector';\n\nconst App: React.FC = () => {\n  const { movies } = useTypedSelector((store) => store.movies);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container mt-3\">\n        <Toolbar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={movies.length ? MovieList : EmptyList}\n          />\n          <Route path=\"/about_me\" component={AboutMe} />\n          <Route path=\"/movie/:imdbID\" component={MoviePage} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export const API_TOKEN = 'a0e1fa4a';\r\nexport const URL = `http://www.omdbapi.com/?apikey=${API_TOKEN}&`;\r\n","import axios from 'axios';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { URL } from '../../constants';\r\nimport {\r\n  FetchMovieAction, FetchMovieActionError,\r\n  FetchMovieActionSuccess, IMovie,\r\n  MovieActionTypes,\r\n} from '../../types/movie';\r\nimport { MoviesFetchRequestAction } from '../../types/movies';\r\n\r\nexport const FetchMovie = ():FetchMovieAction => ({\r\n  type: MovieActionTypes.FETCH_MOVIE,\r\n});\r\n\r\nexport const FetchMovieSuccess = (movie: IMovie):FetchMovieActionSuccess => ({\r\n  type: MovieActionTypes.FETCH_MOVIE_SUCCESS,\r\n  payload: movie,\r\n});\r\n\r\nexport const FetchMovieError = (error: string):FetchMovieActionError => ({\r\n  type: MovieActionTypes.FETCH_MOVIE_ERROR,\r\n  payload: error,\r\n});\r\n\r\nfunction* fetchMovie(action: MoviesFetchRequestAction):any {\r\n  yield put(FetchMovie());\r\n  try {\r\n    const response = yield call(() => axios({\r\n      method: 'GET',\r\n      url: URL + action.payload,\r\n    }));\r\n\r\n    yield put(FetchMovieSuccess(response.data));\r\n  } catch (e) {\r\n    put(FetchMovieError(e.message));\r\n  }\r\n}\r\n\r\nexport function* watchFetchMovie(): any {\r\n  yield takeEvery(MovieActionTypes.FETCH_MOVIE_REQUESTED, fetchMovie);\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n  put, call, takeEvery,\r\n} from 'redux-saga/effects';\r\n\r\nimport { URL } from '../../constants';\r\n\r\nimport {\r\n  FetchMoviesAction, FetchMoviesErrorAction,\r\n  FetchMoviesSuccessAction, IMovieCard, MoviesActionTypes,\r\n  MoviesFetchRequestAction,\r\n} from '../../types/movies';\r\n\r\nconst requestMovies = ():FetchMoviesAction => ({\r\n  type: MoviesActionTypes.FETCH_MOVIES,\r\n});\r\n\r\nconst requestMoviesSuccess = (data: IMovieCard[]):FetchMoviesSuccessAction => ({\r\n  type: MoviesActionTypes.FETCH_MOVIES_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst requestMoviesError = (error: string): FetchMoviesErrorAction => ({\r\n  type: MoviesActionTypes.FETCH_MOVIES_ERROR,\r\n  payload: error,\r\n});\r\n\r\nfunction* fetchMovies(action: MoviesFetchRequestAction): any {\r\n  yield put(requestMovies());\r\n  try {\r\n    const response = yield call(\r\n      () => axios({ method: 'GET', url: URL + action.payload }),\r\n    );\r\n\r\n    if (response.data.Response === 'False') {\r\n      throw new Error(response.data.Error);\r\n    }\r\n    const movies = response.data.Search;\r\n\r\n    yield put(requestMoviesSuccess(movies));\r\n  } catch (e) {\r\n    yield put(requestMoviesError(e.message));\r\n  }\r\n}\r\n\r\nexport default function* watchFetchMovies(): any {\r\n  yield takeEvery(MoviesActionTypes.MOVIES_FETCH_REQUESTED, fetchMovies);\r\n}\r\n","import {\r\n  MovieAction,\r\n  MovieActionTypes, movieStateType,\r\n} from '../../types/movie';\r\n\r\nconst initialState:movieStateType = {\r\n  movie: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const movieReducer = (state = initialState,\r\n  action: MovieAction):movieStateType => {\r\n  switch (action.type) {\r\n    case MovieActionTypes.FETCH_MOVIE:\r\n      return { loading: true, error: null, movie: null };\r\n    case MovieActionTypes.FETCH_MOVIE_SUCCESS:\r\n      return { loading: false, error: null, movie: action.payload };\r\n    case MovieActionTypes.FETCH_MOVIE_ERROR:\r\n      return { loading: false, error: action.payload, movie: null };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  MoviesAction,\r\n  MoviesActionTypes, MoviesState,\r\n} from '../../types/movies';\r\n\r\nconst initialState: MoviesState = {\r\n  movies: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const moviesReducer = (state = initialState,\r\n  action: MoviesAction): MoviesState => {\r\n  switch (action.type) {\r\n    case MoviesActionTypes.FETCH_MOVIES:\r\n      return { loading: true, error: null, movies: [] };\r\n    case MoviesActionTypes.FETCH_MOVIES_SUCCESS:\r\n      return { loading: false, error: null, movies: action.payload };\r\n    case MoviesActionTypes.FETCH_MOVIES_ERROR:\r\n      return { loading: false, error: action.payload, movies: [] };\r\n    case MoviesActionTypes.SET_MOVIES:\r\n      return { loading: false, error: null, movies: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { movieReducer } from './movieReducer';\r\nimport { moviesReducer } from './moviesReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  movies: moviesReducer,\r\n  movie: movieReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { watchFetchMovie } from './action-creators/movie';\r\nimport watchFetchMovies from './action-creators/movies';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst saga = createSagaMiddleware();\r\nexport const store = createStore(rootReducer, applyMiddleware(saga));\r\nsaga.run(watchFetchMovies);\r\nsaga.run(watchFetchMovie);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}